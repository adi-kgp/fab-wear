{"ast":null,"code":"import _objectSpread from \"C:\\\\Web Projects\\\\fab-wear\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAc4bpQRo7_sV-91rzQ-eyCTqY3Pu9N8QE\",\n  authDomain: \"fab-wear.firebaseapp.com\",\n  databaseURL: \"https://fab-wear.firebaseio.com\",\n  projectId: \"fab-wear\",\n  storageBucket: \"fab-wear.appspot.com\",\n  messagingSenderId: \"33927868147\",\n  appId: \"1:33927868147:web:4e30872ff1623f8c92d186\",\n  measurementId: \"G-5V799YG7BR\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Web Projects/fab-wear/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,0BAFC;AAGbC,EAAAA,WAAW,EAAE,iCAHA;AAIbC,EAAAA,SAAS,EAAE,UAJE;AAKbC,EAAAA,aAAa,EAAE,sBALF;AAMbC,EAAAA,iBAAiB,EAAE,aANN;AAObC,EAAAA,KAAK,EAAE,0CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAI,CAACA,QAAQ,CAACI,MAAd,EAAqB;AAAA,UACZC,WADY,GACUX,QADV,CACZW,WADY;AAAA,UACCC,KADD,GACUZ,QADV,CACCY,KADD;AAEnB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMZ,OAAO,CAACa,GAAR;AACJJ,QAAAA,WADI;AACSC,QAAAA,KADT;AACgBC,QAAAA;AADhB,SAC8BZ,cAD9B,EAAN;AAGD,KAJD,CAIE,OAAOe,KAAP,EAAa;AACXR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACH;AACF;;AACD,SAAOf,OAAP;AACD,CAnBM;AAqBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAc4bpQRo7_sV-91rzQ-eyCTqY3Pu9N8QE\",\r\n  authDomain: \"fab-wear.firebaseapp.com\",\r\n  databaseURL: \"https://fab-wear.firebaseio.com\",\r\n  projectId: \"fab-wear\",\r\n  storageBucket: \"fab-wear.appspot.com\",\r\n  messagingSenderId: \"33927868147\",\r\n  appId: \"1:33927868147:web:4e30872ff1623f8c92d186\",\r\n  measurementId: \"G-5V799YG7BR\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n  console.log(snapShot);\r\n  if (!snapShot.exists){\r\n    const {displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try{\r\n      await userRef.set({\r\n        displayName, email, createdAt, ...additionalData \r\n      })\r\n    } catch (error){\r\n        console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}