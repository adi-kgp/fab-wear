{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedPrice, cartItem) => accumulatedPrice + cartItem.quantity * cartItem.price, 0));\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));","map":{"version":3,"sources":["C:/Web Projects/fab-wear/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartTotal","reduce","accumulatedPrice","cartItem","quantity","price","selectCartItemsCount","accumulatedQuantity"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACI,MAF+B,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAGR,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,gBAAD,EAC5BC,QAD4B,KACfD,gBAAgB,GAAGC,QAAQ,CAACC,QAAT,GAAkBD,QAAQ,CAACE,KADhD,EACuD,CADvD,CAF8B,CAAtC;AAMP,OAAO,MAAMC,oBAAoB,GAAGd,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACM,mBAAD,EAC5BJ,QAD4B,KACfI,mBAAmB,GAAGJ,QAAQ,CAACC,QADjC,EAC2C,CAD3C,CAFmC,CAA3C","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst selectCart = state => state.cart;\r\n\r\nexport const selectCartItems = createSelector(\r\n  [selectCart], \r\n  cart => cart.cartItems\r\n);\r\n\r\nexport const selectCartHidden = createSelector(\r\n  [selectCart],\r\n  cart => cart.hidden\r\n);\r\n\r\nexport const selectCartTotal = createSelector(\r\n  [selectCartItems],\r\n  cartItems => cartItems.reduce((accumulatedPrice, \r\n    cartItem) => accumulatedPrice + cartItem.quantity*cartItem.price, 0)\r\n);\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n  [selectCartItems],\r\n  cartItems => cartItems.reduce((accumulatedQuantity, \r\n    cartItem) => accumulatedQuantity + cartItem.quantity, 0)\r\n);"]},"metadata":{},"sourceType":"module"}