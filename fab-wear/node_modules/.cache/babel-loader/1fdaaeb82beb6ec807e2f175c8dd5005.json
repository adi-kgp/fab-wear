{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Projects\\\\fab-wear\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Web Projects/fab-wear/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","connect","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,gCAApE;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMU,yBAAyB,GAAGL,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAE;AAAA,UACVT,0BADU,GACoB,KAAKU,KADzB,CACVV,0BADU;AAEjBA,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBACoD,KAAKD,KADzD;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,oBADP,eACOA,oBADP;AAAA,UAC6BC,mBAD7B,eAC6BA,mBAD7B;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEF,KAAK,CAACG,IAAK,EAAnC;AACE,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEI;AAA3C,SAAoEJ,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,gBAA7B;AACE,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAA8DJ,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAQD;;AAlBoC;;AAqBvC,MAAMM,eAAe,GAAGd,wBAAwB,CAAC;AAC/CW,EAAAA,oBAAoB,EAAEV,0BADyB;AAE/CW,EAAAA,mBAAmB,EAAEV;AAF0B,CAAD,CAAhD;;AAKA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport {Route} from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {connect} from 'react-redux';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from '../../redux/shop/shop.selector';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  \r\n  componentDidMount(){\r\n    const {fetchCollectionsStartAsync} = this.props;\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render (){\r\n    const {match, isCollectionFetching, isCollectionsLoaded} = this.props;\r\n\r\n    return(\r\n      <div className='shop-page'>\r\n        <Route exact path = {`${match.path}`} \r\n          render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionsLoaded} {...props}/>} />\r\n        <Route path = {`${match.path}/:collectionId`} \r\n          render={(props) => <CollectionPageWithSpinner isLoading={isCollectionsLoaded}{...props} />} />\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectIsCollectionFetching,\r\n  isCollectionsLoaded: selectIsCollectionsLoaded \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}